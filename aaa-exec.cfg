# Note that this file will be overwritten during an upgrade. Make changes in custom-exec.cfg

#
#  oem
#    oembrand 	used for oem branding and should normally be left alone
#    oemradius	used for oem branding and should normally be left alone
#    oemconfig	used for oem branding and should normally be left alone
#
oembrand Nokia AAA
oempolicy policy
oemconfig config

#
#  aaa/aaa-exec
#

# The JavaMemory directive allows one to specify a rule to determine how much memory is allocated
# to the policy server. A '-policy-maxmem' option is written to 'custom-exec.cfg'.
# -policy-maxmem -Xms<size> -Xmx<size>
#
# JavaMemory <reserve> <minimum> <maximum> <fraction>
#
#   <reserve> The amount of memory reserved for the operating system and other non-policyServer processes.
#   <minimum> The minimum acceptable size for the policyServer java heap
#   <maximum> The maximum acceptable size for the policyServer java heap
#   <fraction> The fraction of available memory to allocate to the policy server heap (available = total - reserve)
#
#   Size suffixes of k, m, g are supported, per the java command.
#   The server will fail to start if minimum < available.
#
#JavaMemory 4g 1g 28g .75
#  - with a total memory of  4GB, the PolicyServer will fail to start as 4GB < 4g + 1g (<reserve> + <minimum>)
#  - with a total memory of  8GB, the resulting heap would be  3g (= ( 8g - 4g) * 0.75), leaving 5g to the O/S and other processes
#  - with a total memory of 16GB, the resulting heap would be  9g (= (16g - 4g) * 0.75), leaving 7g to the O/S and other processes
#  - with a total memory of 32GB, the resulting heap would be 21g (= (32g - 4g) * 0.75), leaving 11g to the O/S and other processes
#  - with a total memory of 48GB, the resulting heap would be 28g, as that's the configured maximum size for the policy server heap
#

# This section adds macros that can be used on the program/class definitions
# to set options.
#
# Special options include:
#    -java      this value points at a directory to find 'java' (and 'javaw' on Windows).
#               if this value is not specified, java is located using the PATH environment variable.
#    -Linux     the value specified here gets used as JVM options if running on Linux
#    -SunOS     the value specified here gets used as JVM options if running on SunOS
#    -Darwin    the value specified here gets used as JVM options if running on MacOS X
#    -Windows   the value specified here gets used as JVM options if running on Microsoft Windows
#    -pidWait   the value specified here gets used as the timeout value for the 'aaa' top-level launcher to wait for a server to start up or shut down
#

# Though the help shows -server the windows JRE/JDK does not support the -server option
-Windows -client

# timeout value for the 'aaa' top-level launcher to wait for a server to start up or shut down
-pidWait 200s

# Use a specific JAVA install
# -java /usr/jdk/latest/bin/
# -java C:\java\jdk1.6.0_20\bin

# Ensure the specified O/S level user is used for running policy and config servers
# If not specified, any user is acceptable.
#
# -user aaa
# -user root

# Use /dev/urandom for PRNG instead of /dev/random,
#  to prevent unpredictable long delays when starting the PolicyServer
#  on virtual machines with low entropy
-use-urandom -Djava.security.egd=file:/dev/./urandom

# When the processes are started manually, the umask for files generated from the AAA processes (such as logs),
#   is taken from the shell of the UNIX user starting the processes.
# If the AAA processes are started as a RHEL service, the umask is a global one which typically is 0022, unless specified below:
# Typical values:
# 0027 -> rw- r-- ---
# 0022 -> rw- r-- r--
#
# Note that umask only applies to Unix/Linux style operating systems.

# -umask 0027

# The value specified here gets used for maximum memory if specified in an entry
-policy-maxmem -Xms1g -Xmx1g
-tool-maxmem -Xmx1g
-smt-maxmem -Xmx2g
-config-maxmem -Xmx512m

# The value specified here gets used if -nojit is specified in an entry below
-nojit -Xint

# Set long timer on RMI garbage collection so full GCs are not forced when RMI is used
-longrmi -Dsun.rmi.dgc.server.gcInterval=0x7FFFFFFFFFFFFFFE -Dsun.rmi.dgc.client.gcInterval=0x7FFFFFFFFFFFFFFE

# Use Concurrent Mark Sweep Garbage Collection
-cmsgc -XX:+UseParNewGC -XX:+UseConcMarkSweepGC

# Use G1 Garbage Collection
-g1gc -XX:+UseG1GC

# Explicitly sets a 64-bit JVM
-jvm64bits -d64

# Enable logging of GC activity to monitor it with file rotation
# With G1GC, it is recommended to use -XX:+PrintGC instead of -XX:+PrintGCDetails
#
# Version for CMS
#-verbosegc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=32m -XX:+PrintClassHistogramBeforeFullGC -XX:+PrintClassHistogramAfterFullGC
#
# G1GC Version
-verbosegc-jdk8 -XX:+PrintGCDetails -Xloggc:gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=32m -XX:+PrintClassHistogramBeforeFullGC -XX:+PrintClassHistogramAfterFullGC
-verbosegc-jdk9 -Xlog:gc*=info:file=gc.log::filecount=10,filesize=32m
-verbosegc -XX:+PrintGCDetails -Xloggc:gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=32m -XX:+PrintClassHistogramBeforeFullGC -XX:+PrintClassHistogramAfterFullGC

#
# Prints distribution of objects in the YG (Eden + Survivor Spaces) and indicates after how many YG collections, objects are promoted ot the OG
-printygdistribution -XX:+PrintTenuringDistribution

# Uses a reduced Stack Size for the threads, to reduce the native memory footprint
# The default value is 1024 (KB)
# This can be useful if needing low memory usage, and/or if having many threads,
#   at the expense of increasing the risk of a thread dying due to StackOverflowError.
-reducedStackSize -XX:ThreadStackSize=512

# To enable Native Memory Tracking, at the expense of 5-10% percentage drop and more memory usage.
# Only intended to be enabled during lab testing.
# The output of the JVM memory used, can be viewed with:
# $ jcmd <pid> VM.native_memory summary
-nmt -XX:NativeMemoryTracking=summary

# Use incremental model for 1 or 2 CPU hosts
-icms -XX:+CMSIncrementalMode

# Use NUMA based features for memory
-numa -XX:+UseNUMA

# Use Large/Huge Pages, that might optimize performance with large heaps:
# NOTE: Extra configuration has to be done at the O.S.
-LargePages -XX:+UseLargePages

# An AI command or SMT GC will kick off a concurrent gc, rather than a full.
-ExplicitGCInvokesConcurrent -XX:+ExplicitGCInvokesConcurrent

# To generate a heap dump if getting out of memory:
-HeapDumpOnOOM -XX:+HeapDumpOnOutOfMemoryError
#-HeapDumpOnOOM -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/AAA/logs


# Garbage Collection Tuning Examples:
#
# These macros are examples of different GC options.  They are not intended
# to be used without extensive testing for specific use cases and are provided
# for example use only.
#
# Sets the YG size small for short ParNew pauses, and increases the Survivor
# Areas size to allow medium-lived objects to be collected in the YG by the
# ParNew collector Starts the CMS early enough to prevent "Concurrent Mode Failures".
#
-gcexample1 -XX:MaxNewSize=64m -XX:NewSize=64m -XX:CMSInitiatingOccupancyFraction=25 -XX:SurvivorRatio=4
-gcexample2 -XX:CMSInitiatingOccupancyFraction=25 -XX:MaxGCPauseMillis=700 -XX:ParallelGCThreads=6 -XX:SurvivorRatio=10

# Large Server Examples:
#
# These are examples of how a large memory footprint server might be
# configured (large USS for instance).  These are only examples and
# are not intended to be used with all use cases.
#
# Remove the -d64 parameter on non-Solaris platforms.
-bigserver1 -d64 -Xmx6g -Xms6g
-bigserver2 -d64 -Xmx6g -Xms6g -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=25 -XX:MaxGCPauseMillis=700 -XX:ParallelGCThreads=6 -XX:SurvivorRatio=10
-bigserver3 -d64 -Xmx6g -Xms6g -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC

# Other examples to tune the GC, independently for Young and Old Generations:
-parnewoptions -XX:MaxNewSize=1g -XX:NewSize=1g -XX:SurvivorRatio=4 -XX:MaxTenuringThreshold=1 -XX:+UnlockDiagnosticVMOptions -XX:ParGCCardsPerStrideChunk=4096
-cmsoptions -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+CMSScavengeBeforeRemark -XX:CMSWaitDuration=20000



#
#  aaa-XXXX programs
#    if aaa-exec (and additionally waaa-exec on Windows) is copied to a new name, then
#    the entry name for this section is the new program name. This provides a mapping between
#    the program name and the java class to run. It also provides the ability to provide additional
#    aaa-exec or java options for the run. If the class name given has no '.' characters, the package
#    com.lucent.aaa is automatically prepended. The key should not include '.exe' on the Windows
#    platform.
#
aaa-aes -fg -cd AESTool
aaa-ant -fg -tool-maxmem -g1gc -reducedStackSize org.apache.tools.ant.launch.Launcher
aaa-cmd -fg -cd CmdLine
aaa-cert -fg -cd CertificateManager
aaa-config -fg -cd ConfigCommands
aaa-crypt -fg -cd com.lucent.aaa.crypto.Crypt
aaa-hash -fg -cd com.lucent.aaa.crypto.HashPassword
aaa-ldap -fg -cd com.lucent.aaa.ldap.LdapTool
aaa-gldap -bg -cd com.lucent.aaa.ldap.LdapTool -gui
aaa-ldif -fg -cd com.lucent.aaa.ldap.LdifTool
aaa-gldif -bg -cd com.lucent.aaa.ldap.LdifTool -gui
aaa-smt -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.ServerManagementTool -debug info
waaa-smt -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.ServerManagementTool -debug info
pwaaa-smt -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.ServerManagementTool -debug info
aaa-mt -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.MonitorTool
waaa-mt -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.MonitorTool
aaa-db -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.DatabaseTool
waaa-db -bg -cd -smt-maxmem -g1gc -longrmi com.lucent.aaa.gui.DatabaseTool
aaa-dt -fg -cd -tool-maxmem -g1gc com.lucent.aaa.diameter.DiameterTool
aaa-gdt -bg -cd -tool-maxmem -g1gc com.lucent.aaa.diameter.DiameterTool -gui
aaa-rt -fg -cd -tool-maxmem -g1gc com.lucent.aaa.radius.RadiusTool
aaa-rtt -fg -cd -tool-maxmem -g1gc com.lucent.aaa.radius.RadiusTransportTool
aaa-grt -bg -cd -tool-maxmem -g1gc com.lucent.aaa.radius.RadiusTool -gui
aaa-grtt -bg -cd -tool-maxmem -g1gc com.lucent.aaa.radius.RadiusTransportTool -gui
aaa-tt -fg -cd -g1gc com.lucent.aaa.tacacsPlus.TacacsPlusTool
aaa-gtt -bg -cd -g1gc com.lucent.aaa.tacacsPlus.TacacsPlusTool -gui
aaa-crt -fg -cd com.lucent.aaa.CertRequestTool
aaa-cst -fg -cd com.lucent.aaa.CertSignerTool
aaa-cvt -fg -cd com.lucent.aaa.CertViewerTool
aaa-cct -fg -cd com.lucent.aaa.CertChainTool
aaa-dpt -fg -cd com.lucent.aaa.DhParamsTool
aaa-pf2tal -fg -cd com.lucent.aaa.PfToTal
aaa-sft -fg -cd com.lucent.aaa.SampleFileTool
aaa-cidrct -fg -cd com.lucent.aaa.CheckCidrTool
aaa-pdt -fg -cd com.lucent.aaa.PacketDumpTool
aaa-rft -fg -cd com.lucent.aaa.ResourceFileTool

#
# Apache Axis2 tools
#
# To run at debug call with -Dorg.apache.commons.logging.simplelog.defaultlog=debug on command line
#
java2wsdl -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.SimpleLog -Dorg.apache.commons.logging.simplelog.defaultlog=info -fg -cd org.apache.ws.java2wsdl.Java2WSDL
wsdl2java -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.SimpleLog -Dorg.apache.commons.logging.simplelog.defaultlog=info -fg -cd org.apache.axis2.wsdl.WSDL2Java

#
#  aaa classes
#    These entries are used if aaa-exec is invoked directly, and not through a renamed copy.
#    In this case, the command line must include the class name to invoke, and the key to the
#    entry is the fully qualified class name. These entries provide default aaa and java options to
#    provide for the run. The aaa program also effectively invokes aaa-exec to run the following classes:
#    JavaVirtualMachine, CmdLine, PolicyServer, ConfigServer and WaitFile.
#
com.lucent.aaa.PolicyServer -bg -cd -policy-maxmem -server -g1gc -verbosegc -longrmi -HeapDumpOnOOM -numa -reducedStackSize -use-urandom
com.lucent.aaa.ConfigServer -bg -cd -config-maxmem -server -g1gc -longrmi -reducedStackSize -use-urandom
com.lucent.aaa.radius.RadiusTool -bg -cd -tool-maxmem -g1gc -reducedStackSize -use-urandom
com.lucent.aaa.radius.RadiusTransportTool -bg -cd -tool-maxmem -g1gc -reducedStackSize -use-urandom
com.lucent.aaa.diameter.DiameterTool -bg -cd -tool-maxmem -g1gc -reducedStackSize -use-urandom

#
# derby support
#
db-ij org.apache.derby.tools.ij
db-sysinfo org.apache.derby.tools.sysinfo
db-look org.apache.derby.tools.dblook
db-control org.apache.derby.drda.NetworkServerControl
