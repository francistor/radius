authStart:

    /* Get and normalize request data */

    // All client types
    $userName := $request.User-Name->trim()->toLower();
    $acctSessionId := $request.Acct-Session-Id->trim();
    $realm := $packet.User-Realm->toLower();
    $mac-address := $request.HW-User-MAC | $request.Unisphere-PPPoE-Description->substring(6) | $request.Alc-Client-Hardware-Addr;
    $nasPort := $request.NAS-Port;
    $nasIPAddress := $request.NAS-IP-Address;

    /* Detect client type */
    if $request.Unisphere-DHCP-MAC-Address->exists() | $request.Unisphere-PPPoE-Description->exists() then
        $radiusClientType := "MX";
    elsif $request.Alc-Client-Hardware-Addr->exists() then
        $radiusClientType := "ALU";
    elsif $request.HW-User-MAC->exists() then
        $radiusClientType := "HUAWEI";
    endif;

    // Huawei
   if $client.Client-Class == "HUAWEI" | $client.Client-Class == "MX" then
        // NAS-Port-Id <dslam-ip>:<svlan>-<cvlan>
        // Used in Chile. NAS-Port is calculated using the vlan values and NAS-IP-Address is that ot the DSLAm as reported in NAS-Port-Id
	    if $request.NAS-Port-Id matches #/^([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):(([0-9]+)-)?([0-9]+)$/ then
            $user.tmp.pseudo-nas-ip := $match.1;
            $user.tmp.svlan := $match.3;
            $user.tmp.cvlan := $match.4;
            $nasPort := $user.tmp.cvlan|0 + ($user.tmp.svlan|0)*4096;
            $nasIPAddress := $user.tmp.pseudo-nas-ip;
        endif;
    endif;


    // Smart-Edge not implemented
    // Alu does not need any cooking


    

    /* Branch special request types */

    // Service Definition
    if $request.Service-Type == "Outbound-User" then 
        goto serviceRequest; 
    // Prepaid request
    elsif $request.HW-Service-Info matches #/N([-_0-9a-zA-Z]+)/ then
        $user.serviceName := $match.1;
        log "Prepaid request" & $user.serviceName, level => warning;
        goto prepaidRequest;
    endif;


    /* Compose Response */
    $reply.Session-Timeout = 3600;
    $reply.Framed-Protocol = "PPP";
    $reply.Class += "C=legacy_1";
    $reply.Class += "S=service_1";
    $reply.Unisphere-Service-Bundle := "Abab01";

    return success;
    

prepaidRequest:

    /* Get the client credit */
    $reply.HW-Remanent-Volume = 1000;

    return success;

serviceRequest:

    invoke ReadUserFile with
        Text => "@conf/ServiceRemoteDefinition.txt",
        SearchKey => $request.User-Name,
        Map => """
            $reply.* := $reply.*;
        """
    endinvoke

    return success;